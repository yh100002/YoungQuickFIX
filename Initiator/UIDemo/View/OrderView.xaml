<Grid x:Class="UIDemo.View.OrderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:UIDemo.Controls"
    xmlns:rules="clr-namespace:UIDemo.Controls.ValidationRules"
    xmlns:enums="clr-namespace:FIXApplication.Enums"
    >

    <Grid.Resources>
        <Style TargetType="Label" x:Key="fieldLabel">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="80"/>
        </Style>
    </Grid.Resources>
    
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition MinHeight="200"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Label Grid.Row="0" Style="{StaticResource FeatureTitle}" Content="Send/View Orders"/>

    <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal">
                <Label Content="Symbol:" Style="{StaticResource fieldLabel}"/>
                <TextBox Text="{Binding Path=Symbol, Mode=TwoWay}" Width="80"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="OrderQty:" Style="{StaticResource fieldLabel}"/>
                <TextBox Width="80">
                    <TextBox.Text>
                        <Binding Path="OrderQtyString" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <rules:PositiveIntegerRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="OrdType:" Style="{StaticResource fieldLabel}"/>
                <ComboBox x:Name="comboOrdType" Width="80"
                          ItemsSource="{Binding Path=OrderTypeChoices}"
                          SelectedValue="{Binding Path=OrderType, Mode=TwoWay}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="TIF:" Style="{StaticResource fieldLabel}"/>
                <ComboBox x:Name="comboTIF" Width="80"
                          ItemsSource="{Binding Path=TimeInForceChoices}"
                          SelectedValue="{Binding Path=TimeInForce, Mode=TwoWay}"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Column="1"> <!-- outer StackPanel so border won't expand to available height -->
            <Border BorderThickness="1" BorderBrush="#BBBBBB" Padding="0,0,0,20">
                <StackPanel Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style x:Key="MarketFields" TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedValue, ElementName=comboOrdType}" Value="Market">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="LimitFields" TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedValue, ElementName=comboOrdType}" Value="Limit">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    
                    <Label FontWeight="Bold" Content="OrdType-specific fields:" HorizontalContentAlignment="Center"/>

                    <StackPanel Style="{StaticResource MarketFields}">
                        <Label Content="(none)" HorizontalContentAlignment="Center"/>
                    </StackPanel>

                    <StackPanel Style="{StaticResource LimitFields}" Orientation="Horizontal">
                        <Label Content="Price:" Style="{StaticResource fieldLabel}"/>
                        <TextBox Width="80">
                            <TextBox.Text>
                                <Binding Path="LimitPriceString" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                    <Binding.ValidationRules>
                                        <rules:PositiveDecimalRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                </StackPanel>
            </Border>
        </StackPanel>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="MinWidth" Value="80"/>
                    <Setter Property="MinHeight" Value="40"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </Grid.Resources>

            <Button Grid.Row="0" Content="BUY" Command="{Binding Path=SendBuyCommand}"
                    Margin="20,10,20,0"/>
            <Button Grid.Row="1" Content="SELL" Command="{Binding Path=SendSellCommand}"
                    Margin="20,10,20,0"/>
        </Grid>

        <Border Grid.Column="3" BorderThickness="1" BorderBrush="#BBBBBB">
            <Grid>
                <Grid.Resources>
                    <Style x:Key="AddCustomFieldButtonEnabled" TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=txtCustomFixTag, Path=(Validation.HasError)}" Value="false"/>
                                    <Condition Binding="{Binding ElementName=txtCustomFixValue, Path=(Validation.HasError)}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>

                    <ContextMenu x:Key="CustomFieldContextMenu">
                        <ContextMenu.CommandBindings>
                            <CommandBinding Command="ApplicationCommands.Delete" CanExecute="CanDeleteExecuteHandler" Executed="DeleteCommandHandler"/>
                        </ContextMenu.CommandBindings>
                        <MenuItem Header="Delete Custom Field" Command="ApplicationCommands.Delete"/>
                    </ContextMenu>

                    <Style x:Key="CustomFieldListItemContainerStyle" TargetType="{x:Type ListBoxItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource CustomFieldContextMenu}" />
                    </Style>

                </Grid.Resources>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Label Grid.Row="0" FontWeight="Bold"
                       Content="Custom FIX fields:" HorizontalContentAlignment="Center"/>
                <Grid Grid.Row="1" HorizontalAlignment="Center" Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Grid.Row="0" Content="Tag" Padding="0"/>
                    <TextBox Grid.Column="0" Grid.Row="1" x:Name="txtCustomFixTag" Width="30" Margin="2,0,2,0">
                        <TextBox.Text>
                            <Binding Path="CustomFixTag" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <rules:PositiveDecimalRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>      
                    </TextBox>
                    
                    <Label Grid.Column="1" Grid.Row="0" Content="Value" Padding="0"/>
                    <TextBox Grid.Column="1" Grid.Row="1" x:Name="txtCustomFixValue" Width="80" Margin="2,0,2,0">
                        <TextBox.Text>
                            <Binding Path="CustomFixValue" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <rules:NotEmptyRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Button Grid.Row="2" Content="Add Custom Field"
                        Style="{StaticResource AddCustomFieldButtonEnabled}"
                        Command="{Binding Path=AddCustomFieldCommand}"
                        MaxWidth="100" HorizontalAlignment="Center"/>

                <ListView x:Name="lvCustomFields"
                          Grid.Row="3" Margin="20,10,20,0" IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding Path=CustomFields, Mode=TwoWay}"
                          ItemContainerStyle="{StaticResource CustomFieldListItemContainerStyle}">
                    <ListView.Resources>
                        <!--
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style>
                        -->
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridView.Columns>
                                <GridViewColumn Header="Tag" DisplayMemberBinding="{Binding Path=Tag}"/>
                                <GridViewColumn Header="Value" DisplayMemberBinding="{Binding Path=Value}"/>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                </ListView>

                <TextBlock Grid.Row="4" HorizontalAlignment="Center" TextWrapping="Wrap" Margin="20,0,20,5"
                           Text="Right-click a row to remove a specific tag" />
                
                <Button Grid.Row="5" Content="Clear All" Command="{Binding Path=ClearCustomFieldsCommand}"
                        MaxWidth="100" HorizontalAlignment="Center"/>

            </Grid>
        </Border>
    </Grid>

    <Grid Grid.Row="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Content="Right-click a row below to cancel an order" HorizontalContentAlignment="Center" Margin="0,5,0,0"/>

        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1" Margin="0">
            <Border.Resources>
                <ContextMenu x:Key="OrdersContextMenu">
                    <ContextMenu.CommandBindings>
                        <CommandBinding Command="controls:OrderCommands.Cancel" CanExecute="CanCancelExecuteHandler" Executed="CancelCommandHandler"/>
                        <CommandBinding Command="controls:OrderCommands.CancelReplace" CanExecute="CanCancelReplaceExecuteHandler" Executed="CancelReplaceCommandHandler"/>
                    </ContextMenu.CommandBindings>
                    <MenuItem Header="Cancel" Command="controls:OrderCommands.Cancel"/>
                    <MenuItem Header="CancelReplace" Command="controls:OrderCommands.CancelReplace"/>
                </ContextMenu>

                <Style x:Key="CustomFieldListItemContainerStyle" TargetType="{x:Type ListBoxItem}">
                    <Setter Property="ContextMenu" Value="{StaticResource OrdersContextMenu}" />
                </Style>
            </Border.Resources>

            <ListView x:Name="lvOrders" IsSynchronizedWithCurrentItem="True"
                      ItemsSource="{Binding Path=Orders, Mode=TwoWay}"
                      ItemContainerStyle="{StaticResource CustomFieldListItemContainerStyle}">
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Header="ClOrdID" DisplayMemberBinding="{Binding Path=ClOrdID}"/>
                            <GridViewColumn Header="OrderID" DisplayMemberBinding="{Binding Path=OrderID}"/>
                            <GridViewColumn Header="Symbol" DisplayMemberBinding="{Binding Path=Symbol}"/>
                            <GridViewColumn Header="Side" DisplayMemberBinding="{Binding Path=Side}"/>
                            <GridViewColumn Header="OrdType" DisplayMemberBinding="{Binding Path=OrdType}"/>
                            <GridViewColumn Header="Price" DisplayMemberBinding="{Binding Path=Price}"/>
                            <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Path=Status}"/>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Border>
    </Grid>
</Grid>
